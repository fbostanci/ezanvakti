#!/bin/bash
#
#
#
#                           Ezanvakti Sleep Yöntemi  Bileşeni 1.2
#

calisma_kipi=$1

. @libdir@/@AD@/temel_islevler.bash
# TODO: kendiliğinden çalışmayı denetle.
bilesen_yukle mplayer_yonetici
(( OYNATICI_DURAKLAT )) && bilesen_yukle oynatici_duraklat
renk_denetle

function bekleme_yap() {

  [[ -t 1 ]] && (( KALAN_SURE_SAY )) && {
    while (( bekle ))
    do
      # Her 12 saniyede bir süreyi sapmaya karşı düzelt.
      ((bekle%12 == 0)) && bekleme_suresi ${vakit_saati}
      printf "${RENK7}${RENK2}Kalan süre:${RENK5} %02d saat : %02d dakika : %02d saniye${RENK0}\r" \
        $((bekle/3600)) $((bekle%3600/60)) $((bekle%60))
      ((bekle--))
      sleep 1
    done
  } || sleep $1
}

# Vakit bildirimleri için ezan dinletiminin yanında
# diğer bildirimleri de düzenleyen fonksiyon
function ezanoku() {
  clear
  printf '%b%b\n' \
    "${RENK7}${RENK3}${ILCE}${RENK2} " \
    "için ${RENK3}${simdiki}${RENK2} namazı vakti${RENK5} $vakit_saati${RENK0}"

  notify-send "${ILCE} için" \
    "${simdiki} namazı vakti\n$vakit_saati" \
    -i ${VERI_DIZINI}/simgeler/ezanvakti.png -t $EZAN_BILDIRIM_SURESI"000" -h int:transient:1

  (( ezan_okunsun_mu )) || { sleep 1m; return 0; }
  bilesen_yukle mplayer_yonetici

  # Oynatıcı duraklatma etkin mi ezan okumadan değeri
  # denetle ve fonksiyonu çağır.
  (( OYNATICI_DURAKLAT )) && oynatici_islem || mplayer_calistir "${vakit_ezani}"
  (( EZAN_DUASI_OKU )) && mplayer_calistir "${EZAN_DUASI}"
  clear
}

# Vakit ezanı okunmadan önce  anımsatma
function vakit_animsat() {
  local dakika_saniye animsatici_saniye

  # Kullanıcı anımsatma değerini sıfır olarak belirlememişse
  (( VAKIT_ANIMSAT )) && {
    dakika_saniye=$((VAKIT_ANIMSAT*60))
    animsatici_saniye=$((bekle-dakika_saniye))

    # Eğer betik vakit ezanına animsatma dakikasından
    # daha az bir süre kala çalıştırılırsa bekleme değeri
    # eksiye düşüyor.
    # Sadece değer sıfırdan büyükse anımsatma yap.
    (( animsatici_saniye > 0 )) && {
      sleep $animsatici_saniye
      notify-send "Ezanvakti" "$VAKIT_ANIMSAT dakika sonra $simdiki ezanı okunacak." \
        -t $EZAN_BILDIRIM_SURESI"000" -i ${VERI_DIZINI}/simgeler/ezanvakti.png -h int:transient:1
    }
  }
}

# Dini günler için anımsatıcı
function gun_animsat() {
  local ozel_ileti

  # Eğer GUN_ANIMSAT değeri sıfır değilse girilen saniye değerini
  # bildirimin bekleme süresi olarak kullan.
  (( GUN_ANIMSAT )) && {
    if grep -q $(date +%d.%m.%Y) ${VERI_DIZINI}/veriler/gunler
    then
        ozel_ileti="\n\nBugün:  <b>$(grep $(date +%d.%m.%Y) ${VERI_DIZINI}/veriler/gunler | cut -d' ' -f2-)</b>"
    elif grep -q $(date -d 'tomorrow' +%d.%m.%Y) ${VERI_DIZINI}/veriler/gunler
    then
        ozel_ileti="\n\nYarın:  <b>$(grep $(date -d 'tomorrow' +%d.%m.%Y) ${VERI_DIZINI}/veriler/gunler | cut -d' ' -f2-)</b>"
    else
        ozel_ileti=''
    fi

    # eğer ozel_ileti boş (null) dönmemişse bildirimi gönder.
    [[ -n ${ozel_ileti} ]] && {
      notify-send "Ezanvakti" "${ozel_ileti}" -t $GUN_ANIMSAT"000" \
        -i ${VERI_DIZINI}/simgeler/ezanvakti.png -h int:transient:1
    }
  }
}

# --ramazan için özel bildirim veren ezan okutma fonksiyonu.
function ramazan_ezanoku() {
  clear
  printf '%b\n%b\n' \
    "${RENK7}${RENK3} ${ILCE}${RENK2} " \
    "için ${RENK3}${simdiki}${RENK2} vakti${RENK5} $vakit_saati${RENK0}"

  notify-send "${ILCE} için" "${simdiki} vakti \n$vakit_saati" \
    -i ${VERI_DIZINI}/simgeler/ezanvakti.png -t $EZAN_BILDIRIM_SURESI"000" -h int:transient:1

  (( ezan_okunsun_mu )) || { sleep 1m; return 0; }
  bilesen_yukle mplayer_yonetici

  # Oynatıcı duraklatma etkin mi ezan okumadan değeri
  # denetle ve fonksiyonu çağır.
  (( OYNATICI_DURAKLAT )) && oynatici_islem || mplayer_calistir "${vakit_ezani}"
  (( EZAN_DUASI_OKU )) && mplayer_calistir "${EZAN_DUASI}"
  clear
}

# Vakitlerde ezan okunmasının ve bildirimin yönetildiği özyinelemeli ana fonksiyon.
function ezanlar() {
  denetle; bugun

  [[ $UNIXSAAT -le $sabah ]] && {
    simdiki=Sabah
    vakit_ezani="${SABAH_EZANI}"
    vakit_saati=$sabah_n
    ezan_okunsun_mu=${SABAH_EZANI_OKU}

    # Eğer betik ezan vakti dakikası içerisinde
    # çalıştırılırsa saniyeyi önemseme, ezan okut.
    [[ $SAAT -eq $sabah ]] && { ezanoku; ezanlar; }
    printf "${RENK7}${RENK4}Sabah ezanı için bekleniyor...${RENK0}\n"

    # Bilgisayar uyku ya da askı kipinden döndüğünde sleep komutundan
    # dolayı saat uyumsuzluğu sorunu oluyor.
    # Ezan okutmadan önce son bir denetim daha yapılması için
    # ezanlar/iftarimsak fonksiyonlarını bir daha çağır.
    bekleme_suresi $sabah_n; vakit_animsat &
    bekleme_yap $bekle; ezanlar; ezanoku; ezanlar
  } ||

  [[ $UNIXSAAT -le $ogle ]] && {
    simdiki=Öğle
    vakit_ezani="${OGLE_EZANI}"
    vakit_saati=$ogle_n
    ezan_okunsun_mu=${OGLE_EZANI_OKU}

    [[ $UNIXSAAT -eq $ogle ]] && { ezanoku; ezanlar; }
    printf "${RENK7}${RENK4}Öğle ezanı için bekleniyor...${RENK0}\n"

    bekleme_suresi $ogle_n; vakit_animsat &
    bekleme_yap $bekle; ezanlar; ezanoku; ezanlar
  } ||

  [[ $UNIXSAAT -le $ikindi ]] && {
    simdiki=İkindi
    vakit_ezani="${IKINDI_EZANI}"
    vakit_saati=$ikindi_n
    ezan_okunsun_mu=${IKINDI_EZANI_OKU}

    [[ $UNIXSAAT -eq $ikindi ]] && { ezanoku; ezanlar; }
    printf "${RENK7}${RENK4}İkindi ezanı için bekleniyor...${RENK0}\n"

    bekleme_suresi $ikindi_n; vakit_animsat &
    bekleme_yap $bekle; ezanlar; ezanoku; ezanlar
  } ||

  [[ $UNIXSAAT -le $aksam ]] && {
    simdiki=Akşam
    vakit_ezani="${AKSAM_EZANI}"
    vakit_saati=$aksam_n
    ezan_okunsun_mu=${AKSAM_EZANI_OKU}

    [[ $UNIXSAAT -eq $aksam ]] && { ezanoku; ezanlar; }
    printf "${RENK7}${RENK4}Akşam ezanı için bekleniyor...${RENK0}\n"

    bekleme_suresi $aksam_n; vakit_animsat &
    bekleme_yap $bekle; ezanlar; ezanoku; ezanlar
  } ||

  [[ $UNIXSAAT -le $yatsi ]] && {
    simdiki=Yatsı
    vakit_ezani="${YATSI_EZANI}"
    vakit_saati=$yatsi_n
    ezan_okunsun_mu=${YATSI_EZANI_OKU}

    [[ $UNIXSAAT -eq $yatsi ]] && { ezanoku; ezanlar; }
    printf "${RENK7}${RENK4}Yatsı ezanı için bekleniyor...${RENK0}\n"

    bekleme_suresi $yatsi_n; vakit_animsat &
    bekleme_yap $bekle; ezanlar; ezanoku; ezanlar
  } ||

  [[ $UNIXSAAT -le $(date -d "23:59:59" +%s) ]] && {
    vakit_saati=23:59
    printf "${RENK7}${RENK4}Yeni gün için bekleniyor...${RENK0}\n"

    bekleme_suresi "23:59:59"; bekleme_yap $bekle; ezanlar
    gun_animsat & ezanlar
  }
}

# Ramazan ezan bildiriminin yönetildiği ana özyinelemeli fonksiyon.
function iftarimsak() {
  denetle; bugun

  [[ $UNIXSAAT -le $sabah ]] && {
    simdiki=İmsak
    vakit_ezani="${SABAH_EZANI}"
    vakit_saati=$sabah_n
    ezan_okunsun_mu=${SABAH_EZANI_OKU}

    [[ $UNIXSAAT -eq $sabah ]] && { ramazan_ezanoku; iftarimsak; }
    printf "${RENK7}${RENK4}İmsak vakti için bekleniyor...${RENK0}\n"

    bekleme_suresi $sabah_n; vakit_animsat &
    bekleme_yap $bekle; iftarimsak; ramazan_ezanoku; iftarimsak
  } ||

  [[ $UNIXSAAT -le $aksam ]] && {
    simdiki=İftar
    vakit_ezani="${AKSAM_EZANI}"
    vakit_saati=$aksam_n
    ezan_okunsun_mu=${AKSAM_EZANI_OKU}

    [[ $UNIXSAAT -eq $aksam ]] && { ramazan_ezanoku; iftarimsak; }
    printf "${RENK7}${RENK4}İftar vakti için bekleniyor...${RENK0}\n"

    bekleme_suresi $aksam_n; vakit_animsat &
    bekleme_yap $bekle; iftarimsak; ramazan_ezanoku; iftarimsak
  } ||

  # Yeni güne ait hesaplamayı yapmak için saat 00:00 olana kadar
  # bekleme uyarısı ver.
  [[ $UNIXSAAT -le $yeni_gun ]] && {
    printf "${RENK7}${RENK4}Yeni gün için bekleniyor...${RENK0}\n"

    bekleme_suresi "23:59:59"; bekleme_yap $((bekle+1)); iftarimsak
    gun_animsat & iftarimsak
  }
}

#function cikis_yap() {
#  kill 0
#  echo
#  exit 1
#}

#function yeniden_baslat() {

#  [[ -n ${vakit_animsat_pid} ]] && kill -9 ${vakit_animsat_pid} &>/dev/null
#  [[ -n ${bekleme_yap_pid} ]] && kill -9 ${bekleme_yap_pid} &>/dev/null
#  if (( calisma_kipi == 1 ))
#  then
#      gun_animsat &
#      ezanlar
#  elif (( calisma_kipi == 2 ))
#  then
#      gun_animsat &
#      iftarimsak
#  fi
#}

# SIGHUP, SIGINT, SIGQUIT ve ERR sinyallerini yakala..
#
# Sinyal yakalandığında cikis_yap() fonk. çağır.
#trap cikis_yap 1 2 3  ERR
#trap yeniden_baslat SIGCHLD


# Bileşen burdan yönetiliyor.
# Ana betikten gelen değere ($1 = $degisken) göre ilgili fonksiyonu çağır.
#
# 1: normal vakit ezanları
# 2: Vakit ezanları için ramazan kipi. (--ramazan)
if (( calisma_kipi == 1 ))
then
    gun_animsat &
    ezanlar
elif (( calisma_kipi == 2 ))
then
    gun_animsat &
    iftarimsak
fi

# vim: set ft=sh ts=2 sw=2 et:
