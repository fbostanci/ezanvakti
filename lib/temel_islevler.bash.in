#
#
#
#                           Ezanvakti Temel İşlevler Bileşeni 1.4
#

AD=@AD@
SURUM=@SURUM@
DUZELTME=@DUZELTME@

BILESEN_DIZINI=@libdir@/${AD}
VERI_DIZINI=@datadir@/${AD}

EZANVAKTI_DIZINI="${XDG_CONFIG_HOME:-$HOME/.config}"/${AD}
EZANVAKTI_AYAR="${EZANVAKTI_DIZINI}"/ayarlar
# Karar verme önceliği env olarak tanımlıysa RENK değişkenine verildi.
# RENK null ise ayarlar dosyasından okunan RENK_KULLAN değerini kullanacak.
#
# Renk kullan sıfırsa renkleri sıfırla.
function renk_denetle() {
  [[ ! -t 1 ]] || [[ ! $DISPLAY ]] && { RENK_KULLAN=0; RENK=0; } ||
    (( ! ${RENK:-RENK_KULLAN} )) && {
      RENK0=''
      RENK1=''
      RENK2=''
      RENK3=''
      RENK4=''
      RENK5=''
      RENK6=''
      RENK7=''
      RENK8=''
    }
}

# Uçbirim pencere başlığını belirle.
function ucbirim_basligi() {
  [[ ! -t 1 ]] || [[ ! $DISPLAY ]] && return 0

   case $TERM in
     rxvt*|xterm*|aterm)
       echo -n -e "\033]0;${AD^} ${SURUM}: $@\007" ;;
   esac
}

[[ ! -t 1 ]] || [[ ! $DISPLAY ]] && { RENK_KULLAN=0; RENK=0; }
[[ ! -d "${EZANVAKTI_DIZINI}" ]] && mkdir -p "${EZANVAKTI_DIZINI}"
[[ ! -f "${EZANVAKTI_AYAR}"   ]] &&
  sed "s:\(EZANVERI_DIZINI=\).*:\1\'${EZANVAKTI_DIZINI}\':" < @sysconfdir@/${AD}/ayarlar > "${EZANVAKTI_AYAR}"

# Öntanımlı ayarları al.
. @sysconfdir@/${AD}/ayarlar

#  Öntanımlı ayarlardan gelen değerlerin üzerine yazılacak.
#
# Kullanıcı ayarlarını al.
. "${EZANVAKTI_AYAR}" ||
  { printf '%s dosyası okunabilir değil.\nÇıkılıyor...\n' "${EZANVAKTI_AYAR}"; exit 1; }

EZANVERI="${EZANVAKTI_DIZINI}/${EZANVERI_ADI}"
MPLAYER="mplayer -really-quiet -softvol -volume $SES"
declare -A YUKLENEN_BILESENLER
# http://git.archlinux.fr/yaourt.git/tree/src/lib/util.sh.in ( load_lib() )
function bilesen_yukle() {
  while [[ $1 ]]
  do
    (( YUKLENEN_BILESENLER[$1] )) && return 0
    if [[ ! -r "${BILESEN_DIZINI}/$1.bash" ]]
    then
        printf "$1.bash dosyası bulunamadı.\n"
        exit 1
    fi
    . "${BILESEN_DIZINI}/$1.bash" || printf "$1.bash bileşeninde sorun var.\n"
    YUKLENEN_BILESENLER[$1]=1
    shift
  done
}

function hatali_kullanim() {
  printf "%s: \`%s' geçerli değil. Yardım için --yardim kullanın.\n" "${AD}" "$1" >&2
  exit 1
}

# Ezanveri dosyası gerektiren işlemlerde ilk önce bu fonksiyon çağrılacak.
#
# ezanveri dosyasının kullanıldığı işlemler için olumsuz durumları denetle.
function denetle() {
  local ksatir
  # ezanlar ve iftarimsak fonksiyonları özyinelemeli çalıştığı için
  # gün değişiminde tarihi güncellemek için tarih, denetle fonksiyonu içine alındı.
  TARIH=$(date +%d.%m.%Y)
  SAAT=$(date +%H%M)
  # 08, 09 için oluşan sekizli sayı hatasının önüne geçmek için saatin,
  # sayısal karşılaştırmalarda kullanılması için UNIX ikilik saatine çevirdik.
  UNIXSAAT=$(date -d "$SAAT" +%s)

  [[ ! -f ${EZANVERI} ]] && { # ezanveri dosyası yoksa
    (( GUNCELLEME_YAP )) && { bilesen_yukle guncelleyici; guncelleme_yap;} || {
      printf '%b%b\n%b\n' \
        "${RENK7}${RENK2}${EZANVERI}" \
        "${RENK3} dosyası bulunamadı." \
        "Çıkılıyor...${RENK0}"
      exit 1
    }
  }

  # Bugüne ait tarih ezanveri dosyasında yoksa
  [[ -z $(grep -o ${TARIH} "${EZANVERI}") ]] && {
    (( GUNCELLEME_YAP )) && { bilesen_yukle guncelleyici; guncelleme_yap;} || {
      printf '%b%b\n%b\n' \
        "${RENK7}${RENK2}${EZANVERI_ADI}" \
        "${RENK3} dosyası güncel değil." \
        "Çıkılıyor...${RENK0}"
      exit 1
    }
  }

  # ezanveri dosyasından tarih bloğunu ayıklayıp son tarih satır no dan bugünkünü çıkardık.
  ksatir=$(gawk -v tarih=${TARIH} '/^[0-9][0-9]\.[0-9]*\.[0-9]*/ {if($1 ~ tarih) bsatir = NR}; \
    /^[0-9][0-9]\.[0-9]*\.[0-9]*/ {} END {tsatir = NR}; END {print(tsatir-bsatir)}' "${EZANVERI}")
  let ksatir++

  (( ksatir <= 7 )) && { # sonuç 7 ya da 7'den küçükse
    (( GUNCELLEME_YAP )) && { bilesen_yukle guncelleyici; guncelleme_yap;}

    # Betiğin mevcut oturum boyunca sadece ilk çalışmada bildirim vermesi
    # için çerez dosya denetimi ekledik. Gün değişimi durumu için (mevcut oturum devam ediyorsa)
    # ayrıca dosyaya tarih uzantısı da ekledik.
    [[ ! -f /tmp/eznvrgncldntle_$(date +%d%m%y) ]] && {
      notify-send "Ezanvakti ${SURUM}" "${EZANVERI_ADI} dosyanız\n\t$ksatir gün\nsonra güncelliğini yitirecek." \
        -i ${VERI_DIZINI}/simgeler/ezanvakti.png -t $GUNCELLEME_BILDIRIM_SURESI"000" -h int:transient:1
      :> /tmp/eznvrgncldntle_$(date +%d%m%y)
    }
  }
}

# Bugünün ezan vakitlerini ayıkla ve değerleri vakit değişkenlerine ata.
function bugun() {
  export $(gawk 'BEGIN{tarih = strftime("%d.%m.%Y")} {if($1 ~ tarih) \
    {printf \
    "sabah_n=%s\ngunes_n=%s\nogle_n=%s\nikindi_n=%s\naksam_n=%s\nyatsi_n=%s"\
    , $2,$3,$4,$5,$6,$7}}' "${EZANVERI}")

  sabah=$(date -d "$sabah_n" +%s)
  gunes=$(date -d "$gunes_n" +%s)
  ogle=$(date -d "$ogle_n" +%s)
  ikindi=$(date -d "$ikindi_n" +%s)
  aksam=$(date -d "$aksam_n" +%s)
  yatsi=$(date -d "$yatsi_n" +%s)
  yeni_gun=$(date -d "23:59:59" +%s)
}

# Eğer hedef süre bugün içerisindeyse bu fonksiyon kullanılacak.
function bekleme_suresi() {
  bekle=$(($(date -d "$1" +%s) - $(date +%s) + EZAN_OKUNMA_SURESI_FARKI))
}

#  Eğer hedef süre yarına aitse bu fonksiyon kullanılacak.
function bekleme_suresi_yarin() {
  bekle=$((86400 - $(date +%s) + $(date -d "$1" +%s) + EZAN_OKUNMA_SURESI_FARKI))
}

# bekleme süresi fonksiyonlarından gelen bekle değerini
# saat, dakika ve saniyeye çeviren fonksiyon
function kalan() {
  kalan_sure=$(printf '%02d saat : %02d dakika : %02d saniye' \
    $((bekle/3600)) $((bekle%3600/60)) $((bekle%60)))
}

# Hadis, bilgi ve esma için 1 ile verilen sayı($1) arasında
# rastgele bir sayı seç. Seçilen sayı için içerik_al ile gelen
# dosya üzerinde işlem yapıp içeriği alinan_yanit değişkenine ata.
function secim_yap() {
  secilen=$((RANDOM%$1))
  (( ! secilen )) && secilen=$1
  alinan_yanit="$(sed -n "/#$secilen<#/,/#>$secilen#/p" ${icerik_al} | sed '1d;$d')"
}

function surum_goster() {
  printf '%s\n%s\n\n%s\n%s\n%s\n%s\n\n%s\n%s\n%s\n%s\n\n%s\n%s\n' \
    "${AD^} $SURUM düzenleme: $DUZELTME"\
    'Copyright (C) 2010-2017 Fatih Bostancı'\
    'This program is free software; you can redistribute it and/or modify'\
    'it under the terms of the GNU General Public License as published by'\
    'the Free Software Foundation; either version 3 of the License, or'\
    '(at your option) any later version.'\
    'This program is distributed in the hope that it will be useful,'\
    'but WITHOUT ANY WARRANTY; without even the implied warranty of'\
    'MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the'\
    'GNU General Public License for more details.'\
    'You should have received a copy of the GNU General Public License'\
    'along with this program. If not, see http://www.gnu.org/licenses/.'
}

# vim: set ft=sh ts=2 sw=2 et:
