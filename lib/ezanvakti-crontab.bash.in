#!/bin/bash
#
#
#                           Ezanvakti Crontab Yöntemi  Bileşeni 1.0
#


# TODO: crontab yazdırma ve denetleme eklenecek.

###################3#################
# henüz hazır değil..
exit 0
#####################################

# Öntanımlı ayarları al.
. @sysconfdir@/ezanvakti/ayarlar

# Kullanıcı ayarlarını al.
. "${EZANVAKTI_AYAR}"

# Bileşenleri çalışma sürecine dahil ediyoruz.
. ${BILESEN_DIZINI}/guncelleyici.bash
. ${BILESEN_DIZINI}/ortak.bash
. ${BILESEN_DIZINI}/oynatici_duraklat.bash

# Vakit bildirimleri için ezan dinletiminin yanında
# diğer bildirimleri de düzenleyen fonksiyon
function ezanoku() {
  clear
  printf '%b%b\n' \
  "${RENK7}${RENK3}${ILCE}${RENK2} " \
  "için ${RENK3}${simdiki}${RENK2} namazı vakti${RENK5} $vakit_saati${RENK0}"

  notify-send "<font size=6 color=#D5F65E>${ILCE}<font size=6 color=white> için</font></font>" \
  "<font size=6 color=white><font size=6 color=#CAA7EA>${simdiki}</font> namazı vakti\n$vakit_saati</font>" \
  -i ${VERI_DIZINI}/simgeler/ezanvakti.png -t $EZAN_BILDIRIM_SURESI"000" -h int:transient:1

  # Oynatıcı duraklatma etkin mi ezan okumadan değeri
  # denetle ve fonksiyonu çağır.
  (( OYNATICI_DURAKLAT )) && {
    oynatici_islem
    } || {
      ezandinlet
    }; clear
}

# Vakit ezanı okunmadan önce  anımsatma
function vakit_animsat() {
  local dakika_saniye animsatici_saniye

  # Kullanıcı anımsatma değerini sıfır olarak belirlememişse
  (( VAKIT_ANIMSAT )) && {
    dakika_saniye=$((VAKIT_ANIMSAT*60))
    animsatici_saniye=$((bekle-dakika_saniye))

    # Eğer betik vakit ezanına animsatma dakikasından
    # daha az bir süre kala çalıştırılırsa bekleme değeri
    # eksiye düşüyor.
    # Sadece değer sıfırdan büyükse anımsatma yap.
    (( animsatici_saniye > 0 )) && {
      sleep $animsatici_saniye #; pgrep $0 && \
      notify-send "Ezanvakti" "$VAKIT_ANIMSAT dakika sonra $simdiki ezanı okunacak." \
        -t $EZAN_BILDIRIM_SURESI"000" -i ${VERI_DIZINI}/simgeler/ezanvakti.png -h int:transient:1
    }
  }
}

# Dini günler için anımsatıcı
function gun_animsat() {
  local ozel_ileti

  # Eğer GUN_ANIMSAT değeri sıfır değilse girilen saniye değerini
  # bildirimin bekleme süresi olarak kullan.
  (( GUN_ANIMSAT )) && {
    if grep -q $(date +%d.%m.%Y) ${VERI_DIZINI}/veriler/gunler
    then
        ozel_ileti="\n\nBugün:  <b>$(grep $(date +%d.%m.%Y) ${VERI_DIZINI}/veriler/gunler | cut -d ' ' -f2-)</b>"
    elif grep -q $(date -d 'tomorrow' +%d.%m.%Y) ${VERI_DIZINI}/veriler/gunler
    then
        ozel_ileti="\n\nYarın:  <b>$(grep $(date -d 'tomorrow' +%d.%m.%Y) ${VERI_DIZINI}/veriler/gunler | cut -d ' ' -f2-)</b>"
    else
        ozel_ileti=''
    fi

    # eğer ozel_ileti boş (null) dönmemişse bildirimi gönder.
    [[ -n ${ozel_ileti} ]] && {
      notify-send "Ezanvakti" "${ozel_ileti}" -t $GUN_ANIMSAT"000" \
        -i ${VERI_DIZINI}/simgeler/ezanvakti.png -h int:transient:1
    }
  }
}

# --ramazan için özel bildirim veren ezan okutma fonksiyonu. 
function ramazan_ezanoku() {
  clear
  echo -e "${RENK7}${RENK3} ${ILCE}${RENK2} için ${RENK3}${simdiki}${RENK2} vakti${RENK5} $vakit_saati${RENK0}"

  notify-send "${ILCE} için" "${simdiki} vakti \n$vakit_saati" \
    -i ${VERI_DIZINI}/simgeler/ezanvakti.png -t $EZAN_BILDIRIM_SURESI"000" -h int:transient:1

  (( OYNATICI_DURAKLAT )) && {
    oynatici_islem
  } || {
    ezandinlet
  }; clear
}

# vim: set ft=sh ts=2 sw=2 et:
